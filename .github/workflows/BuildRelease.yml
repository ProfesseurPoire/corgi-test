name: Release the executables when pushed to main
 
# We only want this workflow to trigger when pushing a tag
on:
  push:
    tags:
      - v*
       
jobs:

  create-release:
    name    : Create the release 
    runs-on : ubuntu-latest
    outputs:
      output1: ${{ steps.create_release_step.outputs.upload_url }}
    steps   :
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo 
      - name: Create Release
        id: create_release_step
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: Release ${{ steps.vars.outputs.tag }}
          draft: false
          prerelease: false
    

  ubuntu-release:
    needs   : create-release
    name    : Ubuntu Release
    runs-on : ubuntu-latest
    steps:
      - name : Checkout code
        uses : actions/checkout@v2

      - name : Install Dependencies
        run  : |
                sudo apt-get update 
                sudo apt-get install libsdl2-dev 
                sudo apt-get install libsdl2-mixer-dev 

      - name : Run CMake
        run  : |
               mkdir build  
               cd build 
               export CC=gcc-10 
               export CXX=g++-10 
               cmake .. -DCMAKE_BUILD_TYPE=Release 

      - name : Build Project
        run  : cd build  && make 

      - name : Zip files for release
        run  : cd build && zip FrogKnight-linux FrogKnight -r resources

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.output1 }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: build/FrogKnight-linux.zip
          asset_name: FrogKnight-linux.zip
          asset_content_type: application/zip

  windows-build:
    needs   : create-release
    name    : Window Release
    runs-on : windows-latest
    steps :
      - name : Checkout code
        uses : actions/checkout@v2
      
      - name : Add msbuild to PATH
        uses : microsoft/setup-msbuild@v1.0.2
      
      - name : Run CMake
        run  : |
               mkdir build 
               cd build 
               cmake .. -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 16 2019" -A Win32
      
      - name : Build project
        run  : cd build && msbuild ALL_BUILD.vcxproj /p:Configuration=Release

      - name : Zip files for release
        run  : cd build && dir && cd Release && tar -caf FrogKnight-windows.zip FrogKnight.exe resources *.dll
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.output1 }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: build/Release/FrogKnight-windows.zip
          asset_name: FrogKnight-windows.zip
          asset_content_type: application/zip
